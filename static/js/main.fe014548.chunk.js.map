{"version":3,"sources":["Preview.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Preview","md","className","dangerouslySetInnerHTML","__html","convertToHTMLString","App","useState","setMd","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAQaA,EAAU,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,UAC5B,OACE,qBAAKA,UAAWA,EAAWC,wBAAyB,CAACC,OAAQC,8BAAoBJ,OCctEK,MAjBf,WAAgB,IAAD,EACOC,mBAHH,oFAEJ,mBACNN,EADM,KACFO,EADE,KAMb,OACE,gCACE,qBAAKN,UAAU,cAAf,SAA6B,qDAC7B,sBAAKA,UAAU,mCAAf,UACE,0BAAUA,UAAU,eAAeO,SARpB,SAACC,GACpBF,EAAME,EAAEC,OAAOC,QAOgDA,MAAOX,IAClE,cAAC,EAAD,CAASC,UAAU,mBAAmBD,GAAIA,WCJnCY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe014548.chunk.js","sourcesContent":["import React from 'react'\nimport { convertToHTMLString } from 'minutemd'\n\ntype Props = {\n  md: string;\n  className?: string;\n}\n\nexport const Preview = ({ md, className }: Props) => {\n  return (\n    <div className={className} dangerouslySetInnerHTML={{__html: convertToHTMLString(md)}} />\n  )\n}","import React, { useState, useEffect } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { Preview } from './Preview'\n\nconst DEFAULT_MD = '|left|center|right|\\n|:-|:-:|-:|\\n|**left**|[center](https://example.com)|right|'\n\nfunction App() {\n  const [md, setMd] = useState((DEFAULT_MD))\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMd(e.target.value)\n  }\n\n  return (\n    <div>\n      <div className=\"text-center\"><h1>Minute Playground</h1></div>\n      <div className='container flex flex-row h-screen'>\n        <textarea className='w-1-2 h-full' onChange={handleChange} value={md} />\n        <Preview className='w-1/2 h-full p-4' md={md} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}